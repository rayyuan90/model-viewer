{"version":3,"file":"GLTFLoader.js","sourceRoot":"","sources":["../../../src/third_party/three/GLTFLoader.js"],"names":[],"mappings":"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","sourcesContent":["/**\n * @author Rich Tibbett / https://github.com/richtr\n * @author mrdoob / http://mrdoob.com/\n * @author Tony Parisi / http://www.tonyparisi.com/\n * @author Takahiro / https://github.com/takahirox\n * @author Don McCurdy / https://www.donmccurdy.com\n */\n\n// @TODO in the future, only pull in THREE dependencies needed\nimport * as THREE from 'three';\n\nexport default ( function () {\n\n\tfunction GLTFLoader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\t\tthis.dracoLoader = null;\n\n\t}\n\n\tGLTFLoader.prototype = {\n\n\t\tconstructor: GLTFLoader,\n\n\t\tcrossOrigin: 'Anonymous',\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = this.path !== undefined ? this.path : THREE.LoaderUtils.extractUrlBase( url );\n\n\t\t\tvar loader = new THREE.FileLoader( scope.manager );\n\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tloader.load( url, function ( data ) {\n\n\t\t\t\ttry {\n\n\t\t\t\t\tscope.parse( data, path, onLoad, onError );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tif ( onError !== undefined ) {\n\n\t\t\t\t\t\tonError( e );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow e;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tsetCrossOrigin: function ( value ) {\n\n\t\t\tthis.crossOrigin = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( value ) {\n\n\t\t\tthis.path = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDRACOLoader: function ( dracoLoader ) {\n\n\t\t\tthis.dracoLoader = dracoLoader;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tparse: function ( data, path, onLoad, onError ) {\n\n\t\t\tvar content;\n\t\t\tvar extensions = {};\n\n\t\t\tif ( typeof data === 'string' ) {\n\n\t\t\t\tcontent = data;\n\n\t\t\t} else {\n\n\t\t\t\tvar magic = THREE.LoaderUtils.decodeText( new Uint8Array( data, 0, 4 ) );\n\n\t\t\t\tif ( magic === BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\t\t\ttry {\n\n\t\t\t\t\t\textensions[ EXTENSIONS.KHR_BINARY_GLTF ] = new GLTFBinaryExtension( data );\n\n\t\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t\tif ( onError ) onError( error );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcontent = extensions[ EXTENSIONS.KHR_BINARY_GLTF ].content;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontent = THREE.LoaderUtils.decodeText( new Uint8Array( data ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar json = JSON.parse( content );\n\n\t\t\tif ( json.asset === undefined || json.asset.version[ 0 ] < 2 ) {\n\n\t\t\t\tif ( onError ) onError( new Error( 'THREE.GLTFLoader: Unsupported asset. glTF versions >=2.0 are supported. Use LegacyGLTFLoader instead.' ) );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( json.extensionsUsed ) {\n\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_LIGHTS ) >= 0 ) {\n\n\t\t\t\t\textensions[ EXTENSIONS.KHR_LIGHTS ] = new GLTFLightsExtension( json );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_UNLIT ) >= 0 ) {\n\n\t\t\t\t\textensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] = new GLTFMaterialsUnlitExtension( json );\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ) >= 0 ) {\n\n\t\t\t\t\textensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] = new GLTFMaterialsPbrSpecularGlossinessExtension();\n\n\t\t\t\t}\n\n\t\t\t\tif ( json.extensionsUsed.indexOf( EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ) >= 0 ) {\n\n\t\t\t\t\textensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] = new GLTFDracoMeshCompressionExtension( this.dracoLoader );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tconsole.time( 'GLTFLoader' );\n\n\t\t\tvar parser = new GLTFParser( json, extensions, {\n\n\t\t\t\tpath: path || this.path || '',\n\t\t\t\tcrossOrigin: this.crossOrigin,\n\t\t\t\tmanager: this.manager\n\n\t\t\t} );\n\n\t\t\tparser.parse( function ( scene, scenes, cameras, animations, asset ) {\n\n\t\t\t\tconsole.timeEnd( 'GLTFLoader' );\n\n\t\t\t\tvar glTF = {\n\t\t\t\t\tscene: scene,\n\t\t\t\t\tscenes: scenes,\n\t\t\t\t\tcameras: cameras,\n\t\t\t\t\tanimations: animations,\n\t\t\t\t\tasset: asset\n\t\t\t\t};\n\n\t\t\t\tonLoad( glTF );\n\n\t\t\t}, onError );\n\n\t\t}\n\n\t};\n\n\t/* GLTFREGISTRY */\n\n\tfunction GLTFRegistry() {\n\n\t\tvar objects = {};\n\n\t\treturn\t{\n\n\t\t\tget: function ( key ) {\n\n\t\t\t\treturn objects[ key ];\n\n\t\t\t},\n\n\t\t\tadd: function ( key, object ) {\n\n\t\t\t\tobjects[ key ] = object;\n\n\t\t\t},\n\n\t\t\tremove: function ( key ) {\n\n\t\t\t\tdelete objects[ key ];\n\n\t\t\t},\n\n\t\t\tremoveAll: function () {\n\n\t\t\t\tobjects = {};\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** EXTENSIONS ***********/\n\t/*********************************/\n\n\tvar EXTENSIONS = {\n\t\tKHR_BINARY_GLTF: 'KHR_binary_glTF',\n\t\tKHR_DRACO_MESH_COMPRESSION: 'KHR_draco_mesh_compression',\n\t\tKHR_LIGHTS: 'KHR_lights',\n\t\tKHR_MATERIALS_PBR_SPECULAR_GLOSSINESS: 'KHR_materials_pbrSpecularGlossiness',\n\t\tKHR_MATERIALS_UNLIT: 'KHR_materials_unlit'\n\t};\n\n\t/**\n\t * Lights Extension\n\t *\n\t * Specification: PENDING\n\t */\n\tfunction GLTFLightsExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_LIGHTS;\n\n\t\tthis.lights = {};\n\n\t\tvar extension = ( json.extensions && json.extensions[ EXTENSIONS.KHR_LIGHTS ] ) || {};\n\t\tvar lights = extension.lights || {};\n\n\t\tfor ( var lightId in lights ) {\n\n\t\t\tvar light = lights[ lightId ];\n\t\t\tvar lightNode;\n\n\t\t\tvar color = new THREE.Color().fromArray( light.color );\n\n\t\t\tswitch ( light.type ) {\n\n\t\t\t\tcase 'directional':\n\t\t\t\t\tlightNode = new THREE.DirectionalLight( color );\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'point':\n\t\t\t\t\tlightNode = new THREE.PointLight( color );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'spot':\n\t\t\t\t\tlightNode = new THREE.SpotLight( color );\n\t\t\t\t\tlightNode.position.set( 0, 0, 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ambient':\n\t\t\t\t\tlightNode = new THREE.AmbientLight( color );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( lightNode ) {\n\n\t\t\t\tif ( light.constantAttenuation !== undefined ) {\n\n\t\t\t\t\tlightNode.intensity = light.constantAttenuation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( light.linearAttenuation !== undefined ) {\n\n\t\t\t\t\tlightNode.distance = 1 / light.linearAttenuation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( light.quadraticAttenuation !== undefined ) {\n\n\t\t\t\t\tlightNode.decay = light.quadraticAttenuation;\n\n\t\t\t\t}\n\n\t\t\t\tif ( light.fallOffAngle !== undefined ) {\n\n\t\t\t\t\tlightNode.angle = light.fallOffAngle;\n\n\t\t\t\t}\n\n\t\t\t\tif ( light.fallOffExponent !== undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader:: light.fallOffExponent not currently supported.' );\n\n\t\t\t\t}\n\n\t\t\t\tlightNode.name = light.name || ( 'light_' + lightId );\n\t\t\t\tthis.lights[ lightId ] = lightNode;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Unlit Materials Extension (pending)\n\t *\n\t * PR: https://github.com/KhronosGroup/glTF/pull/1163\n\t */\n\tfunction GLTFMaterialsUnlitExtension( json ) {\n\n\t\tthis.name = EXTENSIONS.KHR_MATERIALS_UNLIT;\n\n\t}\n\n\tGLTFMaterialsUnlitExtension.prototype.getMaterialType = function ( material ) {\n\n\t\treturn THREE.MeshBasicMaterial;\n\n\t};\n\n\tGLTFMaterialsUnlitExtension.prototype.extendParams = function ( materialParams, material, parser ) {\n\n\t\tvar pending = [];\n\n\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\tmaterialParams.opacity = 1.0;\n\n\t\tvar metallicRoughness = material.pbrMetallicRoughness;\n\n\t\tif ( metallicRoughness ) {\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn Promise.all( pending );\n\n\t};\n\n\t/* BINARY EXTENSION */\n\n\tvar BINARY_EXTENSION_BUFFER_NAME = 'binary_glTF';\n\tvar BINARY_EXTENSION_HEADER_MAGIC = 'glTF';\n\tvar BINARY_EXTENSION_HEADER_LENGTH = 12;\n\tvar BINARY_EXTENSION_CHUNK_TYPES = { JSON: 0x4E4F534A, BIN: 0x004E4942 };\n\n\tfunction GLTFBinaryExtension( data ) {\n\n\t\tthis.name = EXTENSIONS.KHR_BINARY_GLTF;\n\t\tthis.content = null;\n\t\tthis.body = null;\n\n\t\tvar headerView = new DataView( data, 0, BINARY_EXTENSION_HEADER_LENGTH );\n\n\t\tthis.header = {\n\t\t\tmagic: THREE.LoaderUtils.decodeText( new Uint8Array( data.slice( 0, 4 ) ) ),\n\t\t\tversion: headerView.getUint32( 4, true ),\n\t\t\tlength: headerView.getUint32( 8, true )\n\t\t};\n\n\t\tif ( this.header.magic !== BINARY_EXTENSION_HEADER_MAGIC ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Unsupported glTF-Binary header.' );\n\n\t\t} else if ( this.header.version < 2.0 ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: Legacy binary file detected. Use LegacyGLTFLoader instead.' );\n\n\t\t}\n\n\t\tvar chunkView = new DataView( data, BINARY_EXTENSION_HEADER_LENGTH );\n\t\tvar chunkIndex = 0;\n\n\t\twhile ( chunkIndex < chunkView.byteLength ) {\n\n\t\t\tvar chunkLength = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tvar chunkType = chunkView.getUint32( chunkIndex, true );\n\t\t\tchunkIndex += 4;\n\n\t\t\tif ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.JSON ) {\n\n\t\t\t\tvar contentArray = new Uint8Array( data, BINARY_EXTENSION_HEADER_LENGTH + chunkIndex, chunkLength );\n\t\t\t\tthis.content = THREE.LoaderUtils.decodeText( contentArray );\n\n\t\t\t} else if ( chunkType === BINARY_EXTENSION_CHUNK_TYPES.BIN ) {\n\n\t\t\t\tvar byteOffset = BINARY_EXTENSION_HEADER_LENGTH + chunkIndex;\n\t\t\t\tthis.body = data.slice( byteOffset, byteOffset + chunkLength );\n\n\t\t\t}\n\n\t\t\t// Clients must ignore chunks with unknown types.\n\n\t\t\tchunkIndex += chunkLength;\n\n\t\t}\n\n\t\tif ( this.content === null ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: JSON content not found.' );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * DRACO Mesh Compression Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/pull/874\n\t */\n\tfunction GLTFDracoMeshCompressionExtension ( dracoLoader ) {\n\n\t\tif ( ! dracoLoader ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: No DRACOLoader instance provided.' );\n\n\t\t}\n\n\t\tthis.name = EXTENSIONS.KHR_DRACO_MESH_COMPRESSION;\n\t\tthis.dracoLoader = dracoLoader;\n\n\t}\n\n\tGLTFDracoMeshCompressionExtension.prototype.decodePrimitive = function ( primitive, parser ) {\n\n\t\tvar dracoLoader = this.dracoLoader;\n\t\tvar bufferViewIndex = primitive.extensions[ this.name ].bufferView;\n\t\tvar gltfAttributeMap = primitive.extensions[ this.name ].attributes;\n\t\tvar threeAttributeMap = {};\n\n\t\tfor ( var attributeName in gltfAttributeMap ) {\n\n\t\t\tif ( !( attributeName in ATTRIBUTES ) ) continue;\n\n\t\t\tthreeAttributeMap[ ATTRIBUTES[ attributeName ] ] = gltfAttributeMap[ attributeName ];\n\n\t\t}\n\n\t\treturn parser.getDependency( 'bufferView', bufferViewIndex ).then( function ( bufferView ) {\n\n\t\t\treturn new Promise( function ( resolve ) {\n\n\t\t\t\tdracoLoader.decodeDracoFile( bufferView, resolve, threeAttributeMap );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specular-Glossiness Extension\n\t *\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/extensions/2.0/Khronos/KHR_materials_pbrSpecularGlossiness\n\t */\n\tfunction GLTFMaterialsPbrSpecularGlossinessExtension() {\n\n\t\treturn {\n\n\t\t\tname: EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS,\n\n\t\t\tspecularGlossinessParams: [\n\t\t\t\t'color',\n\t\t\t\t'map',\n\t\t\t\t'lightMap',\n\t\t\t\t'lightMapIntensity',\n\t\t\t\t'aoMap',\n\t\t\t\t'aoMapIntensity',\n\t\t\t\t'emissive',\n\t\t\t\t'emissiveIntensity',\n\t\t\t\t'emissiveMap',\n\t\t\t\t'bumpMap',\n\t\t\t\t'bumpScale',\n\t\t\t\t'normalMap',\n\t\t\t\t'displacementMap',\n\t\t\t\t'displacementScale',\n\t\t\t\t'displacementBias',\n\t\t\t\t'specularMap',\n\t\t\t\t'specular',\n\t\t\t\t'glossinessMap',\n\t\t\t\t'glossiness',\n\t\t\t\t'alphaMap',\n\t\t\t\t'envMap',\n\t\t\t\t'envMapIntensity',\n\t\t\t\t'refractionRatio',\n\t\t\t],\n\n\t\t\tgetMaterialType: function () {\n\n\t\t\t\treturn THREE.ShaderMaterial;\n\n\t\t\t},\n\n\t\t\textendParams: function ( params, material, parser ) {\n\n\t\t\t\tvar pbrSpecularGlossiness = material.extensions[ this.name ];\n\n\t\t\t\tvar shader = THREE.ShaderLib[ 'standard' ];\n\n\t\t\t\tvar uniforms = THREE.UniformsUtils.clone( shader.uniforms );\n\n\t\t\t\tvar specularMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tuniform sampler2D specularMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapParsFragmentChunk = [\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tuniform sampler2D glossinessMap;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar specularMapFragmentChunk = [\n\t\t\t\t\t'vec3 specularFactor = specular;',\n\t\t\t\t\t'#ifdef USE_SPECULARMAP',\n\t\t\t\t\t'\tvec4 texelSpecular = texture2D( specularMap, vUv );',\n\t\t\t\t\t'\ttexelSpecular = sRGBToLinear( texelSpecular );',\n\t\t\t\t\t'\t// reads channel RGB, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tspecularFactor *= texelSpecular.rgb;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar glossinessMapFragmentChunk = [\n\t\t\t\t\t'float glossinessFactor = glossiness;',\n\t\t\t\t\t'#ifdef USE_GLOSSINESSMAP',\n\t\t\t\t\t'\tvec4 texelGlossiness = texture2D( glossinessMap, vUv );',\n\t\t\t\t\t'\t// reads channel A, compatible with a glTF Specular-Glossiness (RGBA) texture',\n\t\t\t\t\t'\tglossinessFactor *= texelGlossiness.a;',\n\t\t\t\t\t'#endif'\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar lightPhysicalFragmentChunk = [\n\t\t\t\t\t'PhysicalMaterial material;',\n\t\t\t\t\t'material.diffuseColor = diffuseColor.rgb;',\n\t\t\t\t\t'material.specularRoughness = clamp( 1.0 - glossinessFactor, 0.04, 1.0 );',\n\t\t\t\t\t'material.specularColor = specularFactor.rgb;',\n\t\t\t\t].join( '\\n' );\n\n\t\t\t\tvar fragmentShader = shader.fragmentShader\n\t\t\t\t\t.replace( '#include <specularmap_fragment>', '' )\n\t\t\t\t\t.replace( 'uniform float roughness;', 'uniform vec3 specular;' )\n\t\t\t\t\t.replace( 'uniform float metalness;', 'uniform float glossiness;' )\n\t\t\t\t\t.replace( '#include <roughnessmap_pars_fragment>', specularMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_pars_fragment>', glossinessMapParsFragmentChunk )\n\t\t\t\t\t.replace( '#include <roughnessmap_fragment>', specularMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <metalnessmap_fragment>', glossinessMapFragmentChunk )\n\t\t\t\t\t.replace( '#include <lights_physical_fragment>', lightPhysicalFragmentChunk );\n\n\t\t\t\tdelete uniforms.roughness;\n\t\t\t\tdelete uniforms.metalness;\n\t\t\t\tdelete uniforms.roughnessMap;\n\t\t\t\tdelete uniforms.metalnessMap;\n\n\t\t\t\tuniforms.specular = { value: new THREE.Color().setHex( 0x111111 ) };\n\t\t\t\tuniforms.glossiness = { value: 0.5 };\n\t\t\t\tuniforms.specularMap = { value: null };\n\t\t\t\tuniforms.glossinessMap = { value: null };\n\n\t\t\t\tparams.vertexShader = shader.vertexShader;\n\t\t\t\tparams.fragmentShader = fragmentShader;\n\t\t\t\tparams.uniforms = uniforms;\n\t\t\t\tparams.defines = { 'STANDARD': '' };\n\n\t\t\t\tparams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\t\tparams.opacity = 1.0;\n\n\t\t\t\tvar pending = [];\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.diffuseFactor ) ) {\n\n\t\t\t\t\tvar array = pbrSpecularGlossiness.diffuseFactor;\n\n\t\t\t\t\tparams.color.fromArray( array );\n\t\t\t\t\tparams.opacity = array[ 3 ];\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.diffuseTexture !== undefined ) {\n\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'map', pbrSpecularGlossiness.diffuseTexture.index ) );\n\n\t\t\t\t}\n\n\t\t\t\tparams.emissive = new THREE.Color( 0.0, 0.0, 0.0 );\n\t\t\t\tparams.glossiness = pbrSpecularGlossiness.glossinessFactor !== undefined ? pbrSpecularGlossiness.glossinessFactor : 1.0;\n\t\t\t\tparams.specular = new THREE.Color( 1.0, 1.0, 1.0 );\n\n\t\t\t\tif ( Array.isArray( pbrSpecularGlossiness.specularFactor ) ) {\n\n\t\t\t\t\tparams.specular.fromArray( pbrSpecularGlossiness.specularFactor );\n\n\t\t\t\t}\n\n\t\t\t\tif ( pbrSpecularGlossiness.specularGlossinessTexture !== undefined ) {\n\n\t\t\t\t\tvar specGlossIndex = pbrSpecularGlossiness.specularGlossinessTexture.index;\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'glossinessMap', specGlossIndex ) );\n\t\t\t\t\tpending.push( parser.assignTexture( params, 'specularMap', specGlossIndex ) );\n\n\t\t\t\t}\n\n\t\t\t\treturn Promise.all( pending );\n\n\t\t\t},\n\n\t\t\tcreateMaterial: function ( params ) {\n\n\t\t\t\t// setup material properties based on MeshStandardMaterial for Specular-Glossiness\n\n\t\t\t\tvar material = new THREE.ShaderMaterial( {\n\t\t\t\t\tdefines: params.defines,\n\t\t\t\t\tvertexShader: params.vertexShader,\n\t\t\t\t\tfragmentShader: params.fragmentShader,\n\t\t\t\t\tuniforms: params.uniforms,\n\t\t\t\t\tfog: true,\n\t\t\t\t\tlights: true,\n\t\t\t\t\topacity: params.opacity,\n\t\t\t\t\ttransparent: params.transparent\n\t\t\t\t} );\n\n\t\t\t\tmaterial.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tmaterial.color = params.color;\n\n\t\t\t\tmaterial.map = params.map === undefined ? null : params.map;\n\n\t\t\t\tmaterial.lightMap = null;\n\t\t\t\tmaterial.lightMapIntensity = 1.0;\n\n\t\t\t\tmaterial.aoMap = params.aoMap === undefined ? null : params.aoMap;\n\t\t\t\tmaterial.aoMapIntensity = 1.0;\n\n\t\t\t\tmaterial.emissive = params.emissive;\n\t\t\t\tmaterial.emissiveIntensity = 1.0;\n\t\t\t\tmaterial.emissiveMap = params.emissiveMap === undefined ? null : params.emissiveMap;\n\n\t\t\t\tmaterial.bumpMap = params.bumpMap === undefined ? null : params.bumpMap;\n\t\t\t\tmaterial.bumpScale = 1;\n\n\t\t\t\tmaterial.normalMap = params.normalMap === undefined ? null : params.normalMap;\n\t\t\t\tif ( params.normalScale ) material.normalScale = params.normalScale;\n\n\t\t\t\tmaterial.displacementMap = null;\n\t\t\t\tmaterial.displacementScale = 1;\n\t\t\t\tmaterial.displacementBias = 0;\n\n\t\t\t\tmaterial.specularMap = params.specularMap === undefined ? null : params.specularMap;\n\t\t\t\tmaterial.specular = params.specular;\n\n\t\t\t\tmaterial.glossinessMap = params.glossinessMap === undefined ? null : params.glossinessMap;\n\t\t\t\tmaterial.glossiness = params.glossiness;\n\n\t\t\t\tmaterial.alphaMap = null;\n\n\t\t\t\tmaterial.envMap = params.envMap === undefined ? null : params.envMap;\n\t\t\t\tmaterial.envMapIntensity = 1.0;\n\n\t\t\t\tmaterial.refractionRatio = 0.98;\n\n\t\t\t\tmaterial.extensions.derivatives = true;\n\n\t\t\t\treturn material;\n\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Clones a GLTFSpecularGlossinessMaterial instance. The ShaderMaterial.copy() method can\n\t\t\t * copy only properties it knows about or inherits, and misses many properties that would\n\t\t\t * normally be defined by MeshStandardMaterial.\n\t\t\t *\n\t\t\t * This method allows GLTFSpecularGlossinessMaterials to be cloned in the process of\n\t\t\t * loading a glTF model, but cloning later (e.g. by the user) would require these changes\n\t\t\t * AND also updating `.onBeforeRender` on the parent mesh.\n\t\t\t *\n\t\t\t * @param  {THREE.ShaderMaterial} source\n\t\t\t * @return {THREE.ShaderMaterial}\n\t\t\t */\n\t\t\tcloneMaterial: function ( source ) {\n\n\t\t\t\tvar target = source.clone();\n\n\t\t\t\ttarget.isGLTFSpecularGlossinessMaterial = true;\n\n\t\t\t\tvar params = this.specularGlossinessParams;\n\n\t\t\t\tfor ( var i = 0, il = params.length; i < il; i ++ ) {\n\n\t\t\t\t\ttarget[ params[ i ] ] = source[ params[ i ] ];\n\n\t\t\t\t}\n\n\t\t\t\treturn target;\n\n\t\t\t},\n\n\t\t\t// Here's based on refreshUniformsCommon() and refreshUniformsStandard() in WebGLRenderer.\n\t\t\trefreshUniforms: function ( renderer, scene, camera, geometry, material, group ) {\n\n\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial !== true ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms = material.uniforms;\n\t\t\t\tvar defines = material.defines;\n\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t\t// uv repeat and offset setting priorities\n\t\t\t\t// 1. color map\n\t\t\t\t// 2. specular map\n\t\t\t\t// 3. normal map\n\t\t\t\t// 4. bump map\n\t\t\t\t// 5. alpha map\n\t\t\t\t// 6. emissive map\n\n\t\t\t\tvar uvScaleMap;\n\n\t\t\t\tif ( material.map ) {\n\n\t\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t\t} else if ( material.glossinessMap ) {\n\n\t\t\t\t\tuvScaleMap = material.glossinessMap;\n\n\t\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t\t// backwards compatibility\n\t\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar offset;\n\t\t\t\t\tvar repeat;\n\n\t\t\t\t\tif ( uvScaleMap.matrix !== undefined ) {\n\n\t\t\t\t\t\t// > r88.\n\n\t\t\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\t\t\toffset = uvScaleMap.offset;\n\t\t\t\t\t\t\trepeat = uvScaleMap.repeat;\n\t\t\t\t\t\t\tvar rotation = uvScaleMap.rotation;\n\t\t\t\t\t\t\tvar center = uvScaleMap.center;\n\n\t\t\t\t\t\t\tuvScaleMap.matrix.setUvTransform( offset.x, offset.y, repeat.x, repeat.y, rotation, center.x, center.y );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// <= r87. Remove when reasonable.\n\n\t\t\t\t\t\toffset = uvScaleMap.offset;\n\t\t\t\t\t\trepeat = uvScaleMap.repeat;\n\n\t\t\t\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.envMap.value = material.envMap;\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t\tuniforms.flipEnvMap.value = ( material.envMap && material.envMap.isCubeTexture ) ? - 1 : 1;\n\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\t\tuniforms.glossiness.value = material.glossiness;\n\n\t\t\t\tuniforms.glossinessMap.value = material.glossinessMap;\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t\tif ( uniforms.glossinessMap.value !== null && defines.USE_GLOSSINESSMAP === undefined ) {\n\n\t\t\t\t\tdefines.USE_GLOSSINESSMAP = '';\n\t\t\t\t\t// set USE_ROUGHNESSMAP to enable vUv\n\t\t\t\t\tdefines.USE_ROUGHNESSMAP = '';\n\n\t\t\t\t}\n\n\t\t\t\tif ( uniforms.glossinessMap.value === null && defines.USE_GLOSSINESSMAP !== undefined ) {\n\n\t\t\t\t\tdelete defines.USE_GLOSSINESSMAP;\n\t\t\t\t\tdelete defines.USE_ROUGHNESSMAP;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/*********************************/\n\t/********** INTERPOLATION ********/\n\t/*********************************/\n\n\t// Spline Interpolation\n\t// Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#appendix-c-spline-interpolation\n\tfunction GLTFCubicSplineInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tTHREE.Interpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t};\n\n\tGLTFCubicSplineInterpolant.prototype = Object.create( THREE.Interpolant.prototype );\n\tGLTFCubicSplineInterpolant.prototype.constructor = GLTFCubicSplineInterpolant;\n\n\tGLTFCubicSplineInterpolant.prototype.interpolate_ = function ( i1, t0, t, t1 ) {\n\n\t\tvar result = this.resultBuffer;\n\t\tvar values = this.sampleValues;\n\t\tvar stride = this.valueSize;\n\n\t\tvar stride2 = stride * 2;\n\t\tvar stride3 = stride * 3;\n\n\t\tvar td = t1 - t0;\n\n\t\tvar p = ( t - t0 ) / td;\n\t\tvar pp = p * p;\n\t\tvar ppp = pp * p;\n\n\t\tvar offset1 = i1 * stride3;\n\t\tvar offset0 = offset1 - stride3;\n\n\t\tvar s0 = 2 * ppp - 3 * pp + 1;\n\t\tvar s1 = ppp - 2 * pp + p;\n\t\tvar s2 = - 2 * ppp + 3 * pp;\n\t\tvar s3 = ppp - pp;\n\n\t\t// Layout of keyframe output values for CUBICSPLINE animations:\n\t\t//   [ inTangent_1, splineVertex_1, outTangent_1, inTangent_2, splineVertex_2, ... ]\n\t\tfor ( var i = 0; i !== stride; i ++ ) {\n\n\t\t\tvar p0 = values[ offset0 + i + stride ];        // splineVertex_k\n\t\t\tvar m0 = values[ offset0 + i + stride2 ] * td;  // outTangent_k * (t_k+1 - t_k)\n\t\t\tvar p1 = values[ offset1 + i + stride ];        // splineVertex_k+1\n\t\t\tvar m1 = values[ offset1 + i ] * td;            // inTangent_k+1 * (t_k+1 - t_k)\n\n\t\t\tresult[ i ] = s0 * p0 + s1 * m0 + s2 * p1 + s3 * m1;\n\n\t\t}\n\n\t\treturn result;\n\n\t};\n\n\t/*********************************/\n\t/********** INTERNALS ************/\n\t/*********************************/\n\n\t/* CONSTANTS */\n\n\tvar WEBGL_CONSTANTS = {\n\t\tFLOAT: 5126,\n\t\t//FLOAT_MAT2: 35674,\n\t\tFLOAT_MAT3: 35675,\n\t\tFLOAT_MAT4: 35676,\n\t\tFLOAT_VEC2: 35664,\n\t\tFLOAT_VEC3: 35665,\n\t\tFLOAT_VEC4: 35666,\n\t\tLINEAR: 9729,\n\t\tREPEAT: 10497,\n\t\tSAMPLER_2D: 35678,\n\t\tPOINTS: 0,\n\t\tLINES: 1,\n\t\tLINE_LOOP: 2,\n\t\tLINE_STRIP: 3,\n\t\tTRIANGLES: 4,\n\t\tTRIANGLE_STRIP: 5,\n\t\tTRIANGLE_FAN: 6,\n\t\tUNSIGNED_BYTE: 5121,\n\t\tUNSIGNED_SHORT: 5123\n\t};\n\n\tvar WEBGL_TYPE = {\n\t\t5126: Number,\n\t\t//35674: THREE.Matrix2,\n\t\t35675: THREE.Matrix3,\n\t\t35676: THREE.Matrix4,\n\t\t35664: THREE.Vector2,\n\t\t35665: THREE.Vector3,\n\t\t35666: THREE.Vector4,\n\t\t35678: THREE.Texture\n\t};\n\n\tvar WEBGL_COMPONENT_TYPES = {\n\t\t5120: Int8Array,\n\t\t5121: Uint8Array,\n\t\t5122: Int16Array,\n\t\t5123: Uint16Array,\n\t\t5125: Uint32Array,\n\t\t5126: Float32Array\n\t};\n\n\tvar WEBGL_FILTERS = {\n\t\t9728: THREE.NearestFilter,\n\t\t9729: THREE.LinearFilter,\n\t\t9984: THREE.NearestMipMapNearestFilter,\n\t\t9985: THREE.LinearMipMapNearestFilter,\n\t\t9986: THREE.NearestMipMapLinearFilter,\n\t\t9987: THREE.LinearMipMapLinearFilter\n\t};\n\n\tvar WEBGL_WRAPPINGS = {\n\t\t33071: THREE.ClampToEdgeWrapping,\n\t\t33648: THREE.MirroredRepeatWrapping,\n\t\t10497: THREE.RepeatWrapping\n\t};\n\n\tvar WEBGL_TEXTURE_FORMATS = {\n\t\t6406: THREE.AlphaFormat,\n\t\t6407: THREE.RGBFormat,\n\t\t6408: THREE.RGBAFormat,\n\t\t6409: THREE.LuminanceFormat,\n\t\t6410: THREE.LuminanceAlphaFormat\n\t};\n\n\tvar WEBGL_TEXTURE_DATATYPES = {\n\t\t5121: THREE.UnsignedByteType,\n\t\t32819: THREE.UnsignedShort4444Type,\n\t\t32820: THREE.UnsignedShort5551Type,\n\t\t33635: THREE.UnsignedShort565Type\n\t};\n\n\tvar WEBGL_SIDES = {\n\t\t1028: THREE.BackSide, // Culling front\n\t\t1029: THREE.FrontSide // Culling back\n\t\t//1032: THREE.NoSide   // Culling front and back, what to do?\n\t};\n\n\tvar WEBGL_DEPTH_FUNCS = {\n\t\t512: THREE.NeverDepth,\n\t\t513: THREE.LessDepth,\n\t\t514: THREE.EqualDepth,\n\t\t515: THREE.LessEqualDepth,\n\t\t516: THREE.GreaterEqualDepth,\n\t\t517: THREE.NotEqualDepth,\n\t\t518: THREE.GreaterEqualDepth,\n\t\t519: THREE.AlwaysDepth\n\t};\n\n\tvar WEBGL_BLEND_EQUATIONS = {\n\t\t32774: THREE.AddEquation,\n\t\t32778: THREE.SubtractEquation,\n\t\t32779: THREE.ReverseSubtractEquation\n\t};\n\n\tvar WEBGL_BLEND_FUNCS = {\n\t\t0: THREE.ZeroFactor,\n\t\t1: THREE.OneFactor,\n\t\t768: THREE.SrcColorFactor,\n\t\t769: THREE.OneMinusSrcColorFactor,\n\t\t770: THREE.SrcAlphaFactor,\n\t\t771: THREE.OneMinusSrcAlphaFactor,\n\t\t772: THREE.DstAlphaFactor,\n\t\t773: THREE.OneMinusDstAlphaFactor,\n\t\t774: THREE.DstColorFactor,\n\t\t775: THREE.OneMinusDstColorFactor,\n\t\t776: THREE.SrcAlphaSaturateFactor\n\t\t// The followings are not supported by Three.js yet\n\t\t//32769: CONSTANT_COLOR,\n\t\t//32770: ONE_MINUS_CONSTANT_COLOR,\n\t\t//32771: CONSTANT_ALPHA,\n\t\t//32772: ONE_MINUS_CONSTANT_COLOR\n\t};\n\n\tvar WEBGL_TYPE_SIZES = {\n\t\t'SCALAR': 1,\n\t\t'VEC2': 2,\n\t\t'VEC3': 3,\n\t\t'VEC4': 4,\n\t\t'MAT2': 4,\n\t\t'MAT3': 9,\n\t\t'MAT4': 16\n\t};\n\n\tvar ATTRIBUTES = {\n\t\tPOSITION: 'position',\n\t\tNORMAL: 'normal',\n\t\tTEXCOORD_0: 'uv',\n\t\tTEXCOORD0: 'uv', // deprecated\n\t\tTEXCOORD: 'uv', // deprecated\n\t\tTEXCOORD_1: 'uv2',\n\t\tCOLOR_0: 'color',\n\t\tCOLOR0: 'color', // deprecated\n\t\tCOLOR: 'color', // deprecated\n\t\tWEIGHTS_0: 'skinWeight',\n\t\tWEIGHT: 'skinWeight', // deprecated\n\t\tJOINTS_0: 'skinIndex',\n\t\tJOINT: 'skinIndex' // deprecated\n\t}\n\n\tvar PATH_PROPERTIES = {\n\t\tscale: 'scale',\n\t\ttranslation: 'position',\n\t\trotation: 'quaternion',\n\t\tweights: 'morphTargetInfluences'\n\t};\n\n\tvar INTERPOLATION = {\n\t\tCUBICSPLINE: THREE.InterpolateSmooth, // We use custom interpolation GLTFCubicSplineInterpolation for CUBICSPLINE.\n\t\t                                      // KeyframeTrack.optimize() can't handle glTF Cubic Spline output values layout,\n\t\t                                      // using THREE.InterpolateSmooth for KeyframeTrack instantiation to prevent optimization.\n\t\t                                      // See KeyframeTrack.optimize() for the detail.\n\t\tLINEAR: THREE.InterpolateLinear,\n\t\tSTEP: THREE.InterpolateDiscrete\n\t};\n\n\tvar STATES_ENABLES = {\n\t\t2884: 'CULL_FACE',\n\t\t2929: 'DEPTH_TEST',\n\t\t3042: 'BLEND',\n\t\t3089: 'SCISSOR_TEST',\n\t\t32823: 'POLYGON_OFFSET_FILL',\n\t\t32926: 'SAMPLE_ALPHA_TO_COVERAGE'\n\t};\n\n\tvar ALPHA_MODES = {\n\t\tOPAQUE: 'OPAQUE',\n\t\tMASK: 'MASK',\n\t\tBLEND: 'BLEND'\n\t};\n\n\t/* UTILITY FUNCTIONS */\n\n\tfunction resolveURL( url, path ) {\n\n\t\t// Invalid URL\n\t\tif ( typeof url !== 'string' || url === '' ) return '';\n\n\t\t// Absolute URL http://,https://,//\n\t\tif ( /^(https?:)?\\/\\//i.test( url ) ) return url;\n\n\t\t// Data URI\n\t\tif ( /^data:.*,.*$/i.test( url ) ) return url;\n\n\t\t// Blob URL\n\t\tif ( /^blob:.*$/i.test( url ) ) return url;\n\n\t\t// Relative URL\n\t\treturn path + url;\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#default-material\n\t */\n\tfunction createDefaultMaterial() {\n\n\t\treturn new THREE.MeshStandardMaterial( {\n\t\t\tcolor: 0xFFFFFF,\n\t\t\temissive: 0x000000,\n\t\t\tmetalness: 1,\n\t\t\troughness: 1,\n\t\t\ttransparent: false,\n\t\t\tdepthTest: true,\n\t\t\tside: THREE.FrontSide\n\t\t} );\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#morph-targets\n\t *\n\t * @param {THREE.Mesh} mesh\n\t * @param {GLTF.Mesh} meshDef\n\t * @param {GLTF.Primitive} primitiveDef\n\t * @param {Array<THREE.BufferAttribute>} accessors\n\t */\n\tfunction addMorphTargets( mesh, meshDef, primitiveDef, accessors ) {\n\n\t\tvar geometry = mesh.geometry;\n\t\tvar material = mesh.material;\n\n\t\tvar targets = primitiveDef.targets;\n\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\tmorphAttributes.position = [];\n\t\tmorphAttributes.normal = [];\n\n\t\tmaterial.morphTargets = true;\n\n\t\tfor ( var i = 0, il = targets.length; i < il; i ++ ) {\n\n\t\t\tvar target = targets[ i ];\n\t\t\tvar attributeName = 'morphTarget' + i;\n\n\t\t\tvar positionAttribute, normalAttribute;\n\n\t\t\tif ( target.POSITION !== undefined ) {\n\n\t\t\t\t// Three.js morph formula is\n\t\t\t\t//   position\n\t\t\t\t//     + weight0 * ( morphTarget0 - position )\n\t\t\t\t//     + weight1 * ( morphTarget1 - position )\n\t\t\t\t//     ...\n\t\t\t\t// while the glTF one is\n\t\t\t\t//   position\n\t\t\t\t//     + weight0 * morphTarget0\n\t\t\t\t//     + weight1 * morphTarget1\n\t\t\t\t//     ...\n\t\t\t\t// then adding position to morphTarget.\n\t\t\t\t// So morphTarget value will depend on mesh's position, then cloning attribute\n\t\t\t\t// for the case if attribute is shared among two or more meshes.\n\n\t\t\t\tpositionAttribute = cloneBufferAttribute( accessors[ target.POSITION ] );\n\t\t\t\tvar position = geometry.attributes.position;\n\n\t\t\t\tfor ( var j = 0, jl = positionAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\tpositionAttribute.setXYZ(\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tpositionAttribute.getX( j ) + position.getX( j ),\n\t\t\t\t\t\tpositionAttribute.getY( j ) + position.getY( j ),\n\t\t\t\t\t\tpositionAttribute.getZ( j ) + position.getZ( j )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.attributes.position ) {\n\n\t\t\t\t// Copying the original position not to affect the final position.\n\t\t\t\t// See the formula above.\n\t\t\t\tpositionAttribute = cloneBufferAttribute( geometry.attributes.position );\n\n\t\t\t}\n\n\t\t\tif ( positionAttribute !== undefined ) {\n\n\t\t\t\tpositionAttribute.name = attributeName;\n\t\t\t\tmorphAttributes.position.push( positionAttribute );\n\n\t\t\t}\n\n\t\t\tif ( target.NORMAL !== undefined ) {\n\n\t\t\t\tmaterial.morphNormals = true;\n\n\t\t\t\t// see target.POSITION's comment\n\n\t\t\t\tnormalAttribute = cloneBufferAttribute( accessors[ target.NORMAL ] );\n\t\t\t\tvar normal = geometry.attributes.normal;\n\n\t\t\t\tfor ( var j = 0, jl = normalAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\tnormalAttribute.setXYZ(\n\t\t\t\t\t\tj,\n\t\t\t\t\t\tnormalAttribute.getX( j ) + normal.getX( j ),\n\t\t\t\t\t\tnormalAttribute.getY( j ) + normal.getY( j ),\n\t\t\t\t\t\tnormalAttribute.getZ( j ) + normal.getZ( j )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.attributes.normal !== undefined ) {\n\n\t\t\t\tnormalAttribute = cloneBufferAttribute( geometry.attributes.normal );\n\n\t\t\t}\n\n\t\t\tif ( normalAttribute !== undefined ) {\n\n\t\t\t\tnormalAttribute.name = attributeName;\n\t\t\t\tmorphAttributes.normal.push( normalAttribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tmesh.updateMorphTargets();\n\n\t\tif ( meshDef.weights !== undefined ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.weights.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetInfluences[ i ] = meshDef.weights[ i ];\n\n\t\t\t}\n\n\t\t}\n\n\t\t// .extras has user-defined data, so check that .extras.targetNames is an array.\n\t\tif ( meshDef.extras && Array.isArray( meshDef.extras.targetNames ) ) {\n\n\t\t\tfor ( var i = 0, il = meshDef.extras.targetNames.length; i < il; i ++ ) {\n\n\t\t\t\tmesh.morphTargetDictionary[ meshDef.extras.targetNames[ i ] ] = i;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tfunction isPrimitiveEqual( a, b ) {\n\n\t\tif ( a.indices !== b.indices ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tvar attribA = a.attributes || {};\n\t\tvar attribB = b.attributes || {};\n\t\tvar keysA = Object.keys( attribA );\n\t\tvar keysB = Object.keys( attribB );\n\n\t\tif ( keysA.length !== keysB.length ) {\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tfor ( var i = 0, il = keysA.length; i < il; i ++ ) {\n\n\t\t\tvar key = keysA[ i ];\n\n\t\t\tif ( attribA[ key ] !== attribB[ key ] ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction getCachedGeometry( cache, newPrimitive ) {\n\n\t\tfor ( var i = 0, il = cache.length; i < il; i ++ ) {\n\n\t\t\tvar cached = cache[ i ];\n\n\t\t\tif ( isPrimitiveEqual( cached.primitive, newPrimitive ) ) {\n\n\t\t\t\treturn cached.promise;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn null;\n\n\t}\n\n\tfunction cloneBufferAttribute( attribute ) {\n\n\t\tif ( attribute.isInterleavedBufferAttribute ) {\n\n\t\t\tvar count = attribute.count;\n\t\t\tvar itemSize = attribute.itemSize;\n\t\t\tvar array = attribute.array.slice( 0, count * itemSize );\n\n\t\t\tfor ( var i = 0; i < count; ++ i ) {\n\n\t\t\t\tarray[ i ] = attribute.getX( i );\n\t\t\t\tif ( itemSize >= 2 ) array[ i + 1 ] = attribute.getY( i );\n\t\t\t\tif ( itemSize >= 3 ) array[ i + 2 ] = attribute.getZ( i );\n\t\t\t\tif ( itemSize >= 4 ) array[ i + 3 ] = attribute.getW( i );\n\n\t\t\t}\n\n\t\t\treturn new THREE.BufferAttribute( array, itemSize, attribute.normalized );\n\n\t\t}\n\n\t\treturn attribute.clone();\n\n\t}\n\n\t/* GLTF PARSER */\n\n\tfunction GLTFParser( json, extensions, options ) {\n\n\t\tthis.json = json || {};\n\t\tthis.extensions = extensions || {};\n\t\tthis.options = options || {};\n\n\t\t// loader object cache\n\t\tthis.cache = new GLTFRegistry();\n\n\t\t// BufferGeometry caching\n\t\tthis.primitiveCache = [];\n\n\t\tthis.textureLoader = new THREE.TextureLoader( this.options.manager );\n\t\tthis.textureLoader.setCrossOrigin( this.options.crossOrigin );\n\n\t\tthis.fileLoader = new THREE.FileLoader( this.options.manager );\n\t\tthis.fileLoader.setResponseType( 'arraybuffer' );\n\n\t}\n\n\tGLTFParser.prototype.parse = function ( onLoad, onError ) {\n\n\t\tvar json = this.json;\n\n\t\t// Clear the loader cache\n\t\tthis.cache.removeAll();\n\n\t\t// Mark the special nodes/meshes in json for efficient parse\n\t\tthis.markDefs();\n\n\t\t// Fire the callback on complete\n\t\tthis.getMultiDependencies( [\n\n\t\t\t'scene',\n\t\t\t'animation',\n\t\t\t'camera'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar scenes = dependencies.scenes || [];\n\t\t\tvar scene = scenes[ json.scene || 0 ];\n\t\t\tvar animations = dependencies.animations || [];\n\t\t\tvar asset = json.asset;\n\t\t\tvar cameras = dependencies.cameras || [];\n\n\t\t\tonLoad( scene, scenes, cameras, animations, asset );\n\n\t\t} ).catch( onError );\n\n\t};\n\n\t/**\n\t * Marks the special nodes/meshes in json for efficient parse.\n\t */\n\tGLTFParser.prototype.markDefs = function () {\n\n\t\tvar nodeDefs = this.json.nodes || [];\n\t\tvar skinDefs = this.json.skins || [];\n\t\tvar meshDefs = this.json.meshes || [];\n\n\t\tvar meshReferences = {};\n\t\tvar meshUses = {};\n\n\t\t// Nothing in the node definition indicates whether it is a Bone or an\n\t\t// Object3D. Use the skins' joint references to mark bones.\n\t\tfor ( var skinIndex = 0, skinLength = skinDefs.length; skinIndex < skinLength; skinIndex ++ ) {\n\n\t\t\tvar joints = skinDefs[ skinIndex ].joints;\n\n\t\t\tfor ( var i = 0, il = joints.length; i < il; i ++ ) {\n\n\t\t\t\tnodeDefs[ joints[ i ] ].isBone = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Meshes can (and should) be reused by multiple nodes in a glTF asset. To\n\t\t// avoid having more than one THREE.Mesh with the same name, count\n\t\t// references and rename instances below.\n\t\t//\n\t\t// Example: CesiumMilkTruck sample model reuses \"Wheel\" meshes.\n\t\tfor ( var nodeIndex = 0, nodeLength = nodeDefs.length; nodeIndex < nodeLength; nodeIndex ++ ) {\n\n\t\t\tvar nodeDef = nodeDefs[ nodeIndex ];\n\n\t\t\tif ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] === undefined ) {\n\n\t\t\t\t\tmeshReferences[ nodeDef.mesh ] = meshUses[ nodeDef.mesh ] = 0;\n\n\t\t\t\t}\n\n\t\t\t\tmeshReferences[ nodeDef.mesh ] ++;\n\n\t\t\t\t// Nothing in the mesh definition indicates whether it is\n\t\t\t\t// a SkinnedMesh or Mesh. Use the node's mesh reference\n\t\t\t\t// to mark SkinnedMesh if node has skin.\n\t\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\t\tmeshDefs[ nodeDef.mesh ].isSkinnedMesh = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.json.meshReferences = meshReferences;\n\t\tthis.json.meshUses = meshUses;\n\n\t};\n\n\t/**\n\t * Requests the specified dependency asynchronously, with caching.\n\t * @param {string} type\n\t * @param {number} index\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.getDependency = function ( type, index ) {\n\n\t\tvar cacheKey = type + ':' + index;\n\t\tvar dependency = this.cache.get( cacheKey );\n\n\t\tif ( ! dependency ) {\n\n\t\t\tvar fnName = 'load' + type.charAt( 0 ).toUpperCase() + type.slice( 1 );\n\t\t\tdependency = this[ fnName ]( index );\n\t\t\tthis.cache.add( cacheKey, dependency );\n\n\t\t}\n\n\t\treturn dependency;\n\n\t};\n\n\t/**\n\t * Requests all dependencies of the specified type asynchronously, with caching.\n\t * @param {string} type\n\t * @return {Promise<Array<Object>>}\n\t */\n\tGLTFParser.prototype.getDependencies = function ( type ) {\n\n\t\tvar dependencies = this.cache.get( type );\n\n\t\tif ( ! dependencies ) {\n\n\t\t\tvar parser = this;\n\t\t\tvar defs = this.json[ type + ( type === 'mesh' ? 'es' : 's' ) ] || [];\n\n\t\t\tdependencies = Promise.all( defs.map( function ( def, index ) {\n\n\t\t\t\treturn parser.getDependency( type, index );\n\n\t\t\t} ) );\n\n\t\t\tthis.cache.add( type, dependencies );\n\n\t\t}\n\n\t\treturn dependencies;\n\n\t};\n\n\t/**\n\t * Requests all multiple dependencies of the specified types asynchronously, with caching.\n\t * @param {Array<string>} types\n\t * @return {Promise<Object<Array<Object>>>}\n\t */\n\tGLTFParser.prototype.getMultiDependencies = function ( types ) {\n\n\t\tvar results = {};\n\t\tvar pendings = [];\n\n\t\tfor ( var i = 0, il = types.length; i < il; i ++ ) {\n\n\t\t\tvar type = types[ i ];\n\t\t\tvar value = this.getDependencies( type );\n\n\t\t\tvalue = value.then( function ( key, value ) {\n\n\t\t\t\tresults[ key ] = value;\n\n\t\t\t}.bind( this, type + ( type === 'mesh' ? 'es' : 's' ) ) );\n\n\t\t\tpendings.push( value );\n\n\t\t}\n\n\t\treturn Promise.all( pendings ).then( function () {\n\n\t\t\treturn results;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBuffer = function ( bufferIndex ) {\n\n\t\tvar bufferDef = this.json.buffers[ bufferIndex ];\n\t\tvar loader = this.fileLoader;\n\n\t\tif ( bufferDef.type && bufferDef.type !== 'arraybuffer' ) {\n\n\t\t\tthrow new Error( 'THREE.GLTFLoader: ' + bufferDef.type + ' buffer type is not supported.' );\n\n\t\t}\n\n\t\t// If present, GLB container is required to be the first buffer.\n\t\tif ( bufferDef.uri === undefined && bufferIndex === 0 ) {\n\n\t\t\treturn Promise.resolve( this.extensions[ EXTENSIONS.KHR_BINARY_GLTF ].body );\n\n\t\t}\n\n\t\tvar options = this.options;\n\n\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\tloader.load( resolveURL( bufferDef.uri, options.path ), resolve, undefined, function () {\n\n\t\t\t\treject( new Error( 'THREE.GLTFLoader: Failed to load buffer \"' + bufferDef.uri + '\".' ) );\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#buffers-and-buffer-views\n\t * @param {number} bufferViewIndex\n\t * @return {Promise<ArrayBuffer>}\n\t */\n\tGLTFParser.prototype.loadBufferView = function ( bufferViewIndex ) {\n\n\t\tvar bufferViewDef = this.json.bufferViews[ bufferViewIndex ];\n\n\t\treturn this.getDependency( 'buffer', bufferViewDef.buffer ).then( function ( buffer ) {\n\n\t\t\tvar byteLength = bufferViewDef.byteLength || 0;\n\t\t\tvar byteOffset = bufferViewDef.byteOffset || 0;\n\t\t\treturn buffer.slice( byteOffset, byteOffset + byteLength );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#accessors\n\t * @param {number} accessorIndex\n\t * @return {Promise<THREE.BufferAttribute|THREE.InterleavedBufferAttribute>}\n\t */\n\tGLTFParser.prototype.loadAccessor = function ( accessorIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\n\t\tvar accessorDef = this.json.accessors[ accessorIndex ];\n\n\t\tif ( accessorDef.bufferView === undefined && accessorDef.sparse === undefined ) {\n\n\t\t\t// Ignore empty accessors, which may be used to declare runtime\n\t\t\t// information about attributes coming from another source (e.g. Draco\n\t\t\t// compression extension).\n\t\t\treturn null;\n\n\t\t}\n\n\t\tvar pendingBufferViews = [];\n\n\t\tif ( accessorDef.bufferView !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.bufferView ) );\n\n\t\t} else {\n\n\t\t\tpendingBufferViews.push( null );\n\n\t\t}\n\n\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.indices.bufferView ) );\n\t\t\tpendingBufferViews.push( this.getDependency( 'bufferView', accessorDef.sparse.values.bufferView ) );\n\n\t\t}\n\n\t\treturn Promise.all( pendingBufferViews ).then( function ( bufferViews ) {\n\n\t\t\tvar bufferView = bufferViews[ 0 ];\n\n\t\t\tvar itemSize = WEBGL_TYPE_SIZES[ accessorDef.type ];\n\t\t\tvar TypedArray = WEBGL_COMPONENT_TYPES[ accessorDef.componentType ];\n\n\t\t\t// For VEC3: itemSize is 3, elementBytes is 4, itemBytes is 12.\n\t\t\tvar elementBytes = TypedArray.BYTES_PER_ELEMENT;\n\t\t\tvar itemBytes = elementBytes * itemSize;\n\t\t\tvar byteOffset = accessorDef.byteOffset || 0;\n\t\t\tvar byteStride = json.bufferViews[ accessorDef.bufferView ].byteStride;\n\t\t\tvar normalized = accessorDef.normalized === true;\n\t\t\tvar array, bufferAttribute;\n\n\t\t\t// The buffer is not interleaved if the stride is the item size in bytes.\n\t\t\tif ( byteStride && byteStride !== itemBytes ) {\n\n\t\t\t\tvar ibCacheKey = 'InterleavedBuffer:' + accessorDef.bufferView + ':' + accessorDef.componentType;\n\t\t\t\tvar ib = parser.cache.get( ibCacheKey );\n\n\t\t\t\tif ( ! ib ) {\n\n\t\t\t\t\t// Use the full buffer if it's interleaved.\n\t\t\t\t\tarray = new TypedArray( bufferView );\n\n\t\t\t\t\t// Integer parameters to IB/IBA are in array elements, not bytes.\n\t\t\t\t\tib = new THREE.InterleavedBuffer( array, byteStride / elementBytes );\n\n\t\t\t\t\tparser.cache.add( ibCacheKey, ib );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.InterleavedBufferAttribute( ib, itemSize, byteOffset / elementBytes, normalized );\n\n\t\t\t} else {\n\n\t\t\t\tif ( bufferView === null ) {\n\n\t\t\t\t\tarray = new TypedArray( accessorDef.count * itemSize );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tarray = new TypedArray( bufferView, byteOffset, accessorDef.count * itemSize );\n\n\t\t\t\t}\n\n\t\t\t\tbufferAttribute = new THREE.BufferAttribute( array, itemSize, normalized );\n\n\t\t\t}\n\n\t\t\t// https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#sparse-accessors\n\t\t\tif ( accessorDef.sparse !== undefined ) {\n\n\t\t\t\tvar itemSizeIndices = WEBGL_TYPE_SIZES.SCALAR;\n\t\t\t\tvar TypedArrayIndices = WEBGL_COMPONENT_TYPES[ accessorDef.sparse.indices.componentType ];\n\n\t\t\t\tvar byteOffsetIndices = accessorDef.sparse.indices.byteOffset || 0;\n\t\t\t\tvar byteOffsetValues = accessorDef.sparse.values.byteOffset || 0;\n\n\t\t\t\tvar sparseIndices = new TypedArrayIndices( bufferViews[ 1 ], byteOffsetIndices, accessorDef.sparse.count * itemSizeIndices );\n\t\t\t\tvar sparseValues = new TypedArray( bufferViews[ 2 ], byteOffsetValues, accessorDef.sparse.count * itemSize );\n\n\t\t\t\tif ( bufferView !== null ) {\n\n\t\t\t\t\t// Avoid modifying the original ArrayBuffer, if the bufferView wasn't initialized with zeroes.\n\t\t\t\t\tbufferAttribute.setArray( bufferAttribute.array.slice() );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var i = 0, il = sparseIndices.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar index = sparseIndices[ i ];\n\n\t\t\t\t\tbufferAttribute.setX( index, sparseValues[ i * itemSize ] );\n\t\t\t\t\tif ( itemSize >= 2 ) bufferAttribute.setY( index, sparseValues[ i * itemSize + 1 ] );\n\t\t\t\t\tif ( itemSize >= 3 ) bufferAttribute.setZ( index, sparseValues[ i * itemSize + 2 ] );\n\t\t\t\t\tif ( itemSize >= 4 ) bufferAttribute.setW( index, sparseValues[ i * itemSize + 3 ] );\n\t\t\t\t\tif ( itemSize >= 5 ) throw new Error( 'THREE.GLTFLoader: Unsupported itemSize in sparse BufferAttribute.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn bufferAttribute;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#textures\n\t * @param {number} textureIndex\n\t * @return {Promise<THREE.Texture>}\n\t */\n\tGLTFParser.prototype.loadTexture = function ( textureIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar options = this.options;\n\t\tvar textureLoader = this.textureLoader;\n\n\t\tvar URL = window.URL || window.webkitURL;\n\n\t\tvar textureDef = json.textures[ textureIndex ];\n\t\tvar source = json.images[ textureDef.source ];\n\t\tvar sourceURI = source.uri;\n\t\tvar isObjectURL = false;\n\n\t\tif ( source.bufferView !== undefined ) {\n\n\t\t\t// Load binary image data from bufferView, if provided.\n\n\t\t\tsourceURI = parser.getDependency( 'bufferView', source.bufferView ).then( function ( bufferView ) {\n\n\t\t\t\tisObjectURL = true;\n\t\t\t\tvar blob = new Blob( [ bufferView ], { type: source.mimeType } );\n\t\t\t\tsourceURI = URL.createObjectURL( blob );\n\t\t\t\treturn sourceURI;\n\n\t\t\t} );\n\n\t\t}\n\n\t\treturn Promise.resolve( sourceURI ).then( function ( sourceURI ) {\n\n\t\t\t// Load Texture resource.\n\n\t\t\tvar loader = THREE.Loader.Handlers.get( sourceURI ) || textureLoader;\n\n\t\t\treturn new Promise( function ( resolve, reject ) {\n\n\t\t\t\tloader.load( resolveURL( sourceURI, options.path ), resolve, undefined, reject );\n\n\t\t\t} );\n\n\t\t} ).then( function ( texture ) {\n\n\t\t\t// Clean up resources and configure Texture.\n\n\t\t\tif ( isObjectURL === true ) {\n\n\t\t\t\tURL.revokeObjectURL( sourceURI );\n\n\t\t\t}\n\n\t\t\ttexture.flipY = false;\n\n\t\t\tif ( textureDef.name !== undefined ) texture.name = textureDef.name;\n\n\t\t\ttexture.format = textureDef.format !== undefined ? WEBGL_TEXTURE_FORMATS[ textureDef.format ] : THREE.RGBAFormat;\n\n\t\t\tif ( textureDef.internalFormat !== undefined && texture.format !== WEBGL_TEXTURE_FORMATS[ textureDef.internalFormat ] ) {\n\n\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Three.js does not support texture internalFormat which is different from texture format. ' +\n\t\t\t\t\t\t\t\t\t\t\t'internalFormat will be forced to be the same value as format.' );\n\n\t\t\t}\n\n\t\t\ttexture.type = textureDef.type !== undefined ? WEBGL_TEXTURE_DATATYPES[ textureDef.type ] : THREE.UnsignedByteType;\n\n\t\t\tvar samplers = json.samplers || {};\n\t\t\tvar sampler = samplers[ textureDef.sampler ] || {};\n\n\t\t\ttexture.magFilter = WEBGL_FILTERS[ sampler.magFilter ] || THREE.LinearFilter;\n\t\t\ttexture.minFilter = WEBGL_FILTERS[ sampler.minFilter ] || THREE.LinearMipMapLinearFilter;\n\t\t\ttexture.wrapS = WEBGL_WRAPPINGS[ sampler.wrapS ] || THREE.RepeatWrapping;\n\t\t\ttexture.wrapT = WEBGL_WRAPPINGS[ sampler.wrapT ] || THREE.RepeatWrapping;\n\n\t\t\treturn texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Asynchronously assigns a texture to the given material parameters.\n\t * @param {Object} materialParams\n\t * @param {string} textureName\n\t * @param {number} textureIndex\n\t * @return {Promise}\n\t */\n\tGLTFParser.prototype.assignTexture = function ( materialParams, textureName, textureIndex ) {\n\n\t\treturn this.getDependency( 'texture', textureIndex ).then( function ( texture ) {\n\n\t\t\tmaterialParams[ textureName ] = texture;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#materials\n\t * @param {number} materialIndex\n\t * @return {Promise<THREE.Material>}\n\t */\n\tGLTFParser.prototype.loadMaterial = function ( materialIndex ) {\n\n\t\tvar parser = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\t\tvar materialDef = this.json.materials[ materialIndex ];\n\n\t\tvar materialType;\n\t\tvar materialParams = {};\n\t\tvar materialExtensions = materialDef.extensions || {};\n\n\t\tvar pending = [];\n\n\t\tif ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ] ) {\n\n\t\t\tvar sgExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\tmaterialType = sgExtension.getMaterialType( materialDef );\n\t\t\tpending.push( sgExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialExtensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ] ) {\n\n\t\t\tvar kmuExtension = extensions[ EXTENSIONS.KHR_MATERIALS_UNLIT ];\n\t\t\tmaterialType = kmuExtension.getMaterialType( materialDef );\n\t\t\tpending.push( kmuExtension.extendParams( materialParams, materialDef, parser ) );\n\n\t\t} else if ( materialDef.pbrMetallicRoughness !== undefined ) {\n\n\t\t\t// Specification:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#metallic-roughness-material\n\n\t\t\tmaterialType = THREE.MeshStandardMaterial;\n\n\t\t\tvar metallicRoughness = materialDef.pbrMetallicRoughness;\n\n\t\t\tmaterialParams.color = new THREE.Color( 1.0, 1.0, 1.0 );\n\t\t\tmaterialParams.opacity = 1.0;\n\n\t\t\tif ( Array.isArray( metallicRoughness.baseColorFactor ) ) {\n\n\t\t\t\tvar array = metallicRoughness.baseColorFactor;\n\n\t\t\t\tmaterialParams.color.fromArray( array );\n\t\t\t\tmaterialParams.opacity = array[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( metallicRoughness.baseColorTexture !== undefined ) {\n\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'map', metallicRoughness.baseColorTexture.index ) );\n\n\t\t\t}\n\n\t\t\tmaterialParams.metalness = metallicRoughness.metallicFactor !== undefined ? metallicRoughness.metallicFactor : 1.0;\n\t\t\tmaterialParams.roughness = metallicRoughness.roughnessFactor !== undefined ? metallicRoughness.roughnessFactor : 1.0;\n\n\t\t\tif ( metallicRoughness.metallicRoughnessTexture !== undefined ) {\n\n\t\t\t\tvar textureIndex = metallicRoughness.metallicRoughnessTexture.index;\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'metalnessMap', textureIndex ) );\n\t\t\t\tpending.push( parser.assignTexture( materialParams, 'roughnessMap', textureIndex ) );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tmaterialType = THREE.MeshPhongMaterial;\n\n\t\t}\n\n\t\tif ( materialDef.doubleSided === true ) {\n\n\t\t\tmaterialParams.side = THREE.DoubleSide;\n\n\t\t}\n\n\t\tvar alphaMode = materialDef.alphaMode || ALPHA_MODES.OPAQUE;\n\n\t\tif ( alphaMode === ALPHA_MODES.BLEND ) {\n\n\t\t\tmaterialParams.transparent = true;\n\n\t\t} else {\n\n\t\t\tmaterialParams.transparent = false;\n\n\t\t\tif ( alphaMode === ALPHA_MODES.MASK ) {\n\n\t\t\t\tmaterialParams.alphaTest = materialDef.alphaCutoff !== undefined ? materialDef.alphaCutoff : 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.normalTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'normalMap', materialDef.normalTexture.index ) );\n\n\t\t\tmaterialParams.normalScale = new THREE.Vector2( 1, 1 );\n\n\t\t\tif ( materialDef.normalTexture.scale !== undefined ) {\n\n\t\t\t\tmaterialParams.normalScale.set( materialDef.normalTexture.scale, materialDef.normalTexture.scale );\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.occlusionTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'aoMap', materialDef.occlusionTexture.index ) );\n\n\t\t\tif ( materialDef.occlusionTexture.strength !== undefined ) {\n\n\t\t\t\tmaterialParams.aoMapIntensity = materialDef.occlusionTexture.strength;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( materialDef.emissiveFactor !== undefined && materialType !== THREE.MeshBasicMaterial) {\n\n\t\t\tmaterialParams.emissive = new THREE.Color().fromArray( materialDef.emissiveFactor );\n\n\t\t}\n\n\t\tif ( materialDef.emissiveTexture !== undefined && materialType !== THREE.MeshBasicMaterial) {\n\n\t\t\tpending.push( parser.assignTexture( materialParams, 'emissiveMap', materialDef.emissiveTexture.index ) );\n\n\t\t}\n\n\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\tvar material;\n\n\t\t\tif ( materialType === THREE.ShaderMaterial ) {\n\n\t\t\t\tmaterial = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].createMaterial( materialParams );\n\n\t\t\t} else {\n\n\t\t\t\tmaterial = new materialType( materialParams );\n\n\t\t\t}\n\n\t\t\tif ( materialDef.name !== undefined ) material.name = materialDef.name;\n\n\t\t\t// Normal map textures use OpenGL conventions:\n\t\t\t// https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#materialnormaltexture\n\t\t\tif ( material.normalScale ) {\n\n\t\t\t\tmaterial.normalScale.x = - material.normalScale.x;\n\n\t\t\t}\n\n\t\t\t// emissiveTexture and baseColorTexture use sRGB encoding.\n\t\t\tif ( material.map ) material.map.encoding = THREE.sRGBEncoding;\n\t\t\tif ( material.emissiveMap ) material.emissiveMap.encoding = THREE.sRGBEncoding;\n\n\t\t\tif ( materialDef.extras ) material.userData = materialDef.extras;\n\n\t\t\treturn material;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * @param  {THREE.BufferGeometry} geometry\n\t * @param  {GLTF.Primitive} primitiveDef\n\t * @param  {Array<THREE.BufferAttribute>} accessors\n\t */\n\tfunction addPrimitiveAttributes ( geometry, primitiveDef, accessors ) {\n\n\t\tvar attributes = primitiveDef.attributes;\n\n\t\tfor ( var gltfAttributeName in attributes ) {\n\n\t\t\tvar threeAttributeName = ATTRIBUTES[ gltfAttributeName ];\n\t\t\tvar bufferAttribute = accessors[ attributes[ gltfAttributeName ] ];\n\n\t\t\t// Skip attributes already provided by e.g. Draco extension.\n\t\t\tif ( !threeAttributeName ) continue;\n\t\t\tif ( threeAttributeName in geometry.attributes ) continue;\n\n\t\t\tgeometry.addAttribute( threeAttributeName, bufferAttribute );\n\n\t\t}\n\n\t\tif ( primitiveDef.indices !== undefined && !geometry.index ) {\n\n\t\t\tgeometry.setIndex( accessors[ primitiveDef.indices ] );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#geometry\n\t * @param {Array<Object>} primitives\n\t * @return {Promise<Array<THREE.BufferGeometry>>}\n\t */\n\tGLTFParser.prototype.loadGeometries = function ( primitives ) {\n\n\t\tvar parser = this;\n\t\tvar extensions = this.extensions;\n\t\tvar cache = this.primitiveCache;\n\n\t\treturn this.getDependencies( 'accessor' ).then( function ( accessors ) {\n\n\t\t\tvar geometries = [];\n\t\t\tvar pending = [];\n\n\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\t\tvar primitive = primitives[ i ];\n\n\t\t\t\t// See if we've already created this geometry\n\t\t\t\tvar cached = getCachedGeometry( cache, primitive );\n\n\t\t\t\tvar geometry;\n\n\t\t\t\tif ( cached ) {\n\n\t\t\t\t\t// Use the cached geometry if it exists\n\t\t\t\t\tpending.push( cached.then( function ( geometry ) {\n\n\t\t\t\t\t\tgeometries.push( geometry );\n\n\t\t\t\t\t} ) );\n\n\t\t\t\t} else if ( primitive.extensions && primitive.extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ] ) {\n\n\t\t\t\t\t// Use DRACO geometry if available\n\t\t\t\t\tvar geometryPromise = extensions[ EXTENSIONS.KHR_DRACO_MESH_COMPRESSION ]\n\t\t\t\t\t\t.decodePrimitive( primitive, parser )\n\t\t\t\t\t\t.then( function ( geometry ) {\n\n\t\t\t\t\t\t\taddPrimitiveAttributes( geometry, primitive, accessors );\n\n\t\t\t\t\t\t\tgeometries.push( geometry );\n\n\t\t\t\t\t\t\treturn geometry;\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\tcache.push( { primitive: primitive, promise: geometryPromise  } );\n\n\t\t\t\t\tpending.push( geometryPromise );\n\n\t\t\t\t} else  {\n\n\t\t\t\t\t// Otherwise create a new geometry\n\t\t\t\t\tgeometry = new THREE.BufferGeometry();\n\n\t\t\t\t\taddPrimitiveAttributes( geometry, primitive, accessors );\n\n\t\t\t\t\t// Cache this geometry\n\t\t\t\t\tcache.push( {\n\n\t\t\t\t\t\tprimitive: primitive,\n\t\t\t\t\t\tpromise: Promise.resolve( geometry )\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tgeometries.push( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn Promise.all( pending ).then( function () {\n\n\t\t\t\treturn geometries;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#meshes\n\t * @param {number} meshIndex\n\t * @return {Promise<THREE.Group|THREE.Mesh|THREE.SkinnedMesh>}\n\t */\n\tGLTFParser.prototype.loadMesh = function ( meshIndex ) {\n\n\t\tvar scope = this;\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshDef = this.json.meshes[ meshIndex ];\n\n\t\treturn this.getMultiDependencies( [\n\n\t\t\t'accessor',\n\t\t\t'material'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar group = new THREE.Group();\n\n\t\t\tvar primitives = meshDef.primitives;\n\n\t\t\treturn scope.loadGeometries( primitives ).then( function ( geometries ) {\n\n\t\t\t\tfor ( var i = 0, il = primitives.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar primitive = primitives[ i ];\n\t\t\t\t\tvar geometry = geometries[ i ];\n\n\t\t\t\t\tvar material = primitive.material === undefined\n\t\t\t\t\t\t? createDefaultMaterial()\n\t\t\t\t\t\t: dependencies.materials[ primitive.material ];\n\n\t\t\t\t\tif ( material.aoMap\n\t\t\t\t\t\t\t&& geometry.attributes.uv2 === undefined\n\t\t\t\t\t\t\t&& geometry.attributes.uv !== undefined ) {\n\n\t\t\t\t\t\tconsole.log( 'THREE.GLTFLoader: Duplicating UVs to support aoMap.' );\n\t\t\t\t\t\tgeometry.addAttribute( 'uv2', new THREE.BufferAttribute( geometry.attributes.uv.array, 2 ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// If the material will be modified later on, clone it now.\n\t\t\t\t\tvar useVertexColors = geometry.attributes.color !== undefined;\n\t\t\t\t\tvar useFlatShading = geometry.attributes.normal === undefined;\n\t\t\t\t\tvar useSkinning = meshDef.isSkinnedMesh === true;\n\t\t\t\t\tvar useMorphTargets = primitive.targets !== undefined;\n\n\t\t\t\t\tif ( useVertexColors || useFlatShading || useSkinning || useMorphTargets ) {\n\n\t\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial ) {\n\n\t\t\t\t\t\t\tvar specGlossExtension = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ];\n\t\t\t\t\t\t\tmaterial = specGlossExtension.cloneMaterial( material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = material.clone();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( useVertexColors ) {\n\n\t\t\t\t\t\tmaterial.vertexColors = THREE.VertexColors;\n\t\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( useFlatShading ) {\n\n\t\t\t\t\t\tmaterial.flatShading = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar mesh;\n\n\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ||\n\t\t\t\t\t\tprimitive.mode === undefined ) {\n\n\t\t\t\t\t\tif ( useSkinning ) {\n\n\t\t\t\t\t\t\tmesh = new THREE.SkinnedMesh( geometry, material );\n\t\t\t\t\t\t\tmaterial.skinning = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new THREE.Mesh( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleStripDrawMode;\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.TRIANGLE_FAN ) {\n\n\t\t\t\t\t\t\tmesh.drawMode = THREE.TriangleFanDrawMode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINES ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.LINE_STRIP ||\n\t\t\t\t\t\tprimitive.mode === WEBGL_CONSTANTS.LINE_LOOP ) {\n\n\t\t\t\t\t\tvar cacheKey = 'LineBasicMaterial:' + material.uuid;\n\n\t\t\t\t\t\tvar lineMaterial = scope.cache.get( cacheKey );\n\n\t\t\t\t\t\tif ( ! lineMaterial ) {\n\n\t\t\t\t\t\t\tlineMaterial = new THREE.LineBasicMaterial();\n\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( lineMaterial, material );\n\t\t\t\t\t\t\tlineMaterial.color.copy( material.color );\n\t\t\t\t\t\t\tlineMaterial.lights = false;  // LineBasicMaterial doesn't support lights yet\n\n\t\t\t\t\t\t\tscope.cache.add( cacheKey, lineMaterial );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial = lineMaterial;\n\n\t\t\t\t\t\tif ( primitive.mode === WEBGL_CONSTANTS.LINES ) {\n\n\t\t\t\t\t\t\tmesh = new THREE.LineSegments( geometry, material );\n\n\t\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.LINE_STRIP ) {\n\n\t\t\t\t\t\t\tmesh = new THREE.Line( geometry, material );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmesh = new THREE.LineLoop( geometry, material );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( primitive.mode === WEBGL_CONSTANTS.POINTS ) {\n\n\t\t\t\t\t\tvar cacheKey = 'PointsMaterial:' + material.uuid;\n\n\t\t\t\t\t\tvar pointsMaterial = scope.cache.get( cacheKey );\n\n\t\t\t\t\t\tif ( ! pointsMaterial ) {\n\n\t\t\t\t\t\t\tpointsMaterial = new THREE.PointsMaterial();\n\t\t\t\t\t\t\tTHREE.Material.prototype.copy.call( pointsMaterial, material );\n\t\t\t\t\t\t\tpointsMaterial.color.copy( material.color );\n\t\t\t\t\t\t\tpointsMaterial.map = material.map;\n\t\t\t\t\t\t\tpointsMaterial.lights = false;  // PointsMaterial doesn't support lights yet\n\n\t\t\t\t\t\t\tscope.cache.add( cacheKey, pointsMaterial );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial = pointsMaterial;\n\n\t\t\t\t\t\tmesh = new THREE.Points( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( 'THREE.GLTFLoader: Primitive mode unsupported: ' + primitive.mode );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.name = meshDef.name || ( 'mesh_' + meshIndex );\n\n\t\t\t\t\tif ( useMorphTargets ) {\n\n\t\t\t\t\t\taddMorphTargets( mesh, meshDef, primitive, dependencies.accessors );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( meshDef.extras !== undefined ) mesh.userData = meshDef.extras;\n\t\t\t\t\tif ( primitive.extras !== undefined ) mesh.geometry.userData = primitive.extras;\n\n\t\t\t\t\t// for Specular-Glossiness.\n\t\t\t\t\tif ( material.isGLTFSpecularGlossinessMaterial === true ) {\n\n\t\t\t\t\t\tmesh.onBeforeRender = extensions[ EXTENSIONS.KHR_MATERIALS_PBR_SPECULAR_GLOSSINESS ].refreshUniforms;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( primitives.length > 1 ) {\n\n\t\t\t\t\t\tmesh.name += '_' + i;\n\n\t\t\t\t\t\tgroup.add( mesh );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\treturn mesh;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn group;\n\n\t\t\t} );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#cameras\n\t * @param {number} cameraIndex\n\t * @return {Promise<THREE.Camera>}\n\t */\n\tGLTFParser.prototype.loadCamera = function ( cameraIndex ) {\n\n\t\tvar camera;\n\t\tvar cameraDef = this.json.cameras[ cameraIndex ];\n\t\tvar params = cameraDef[ cameraDef.type ];\n\n\t\tif ( ! params ) {\n\n\t\t\tconsole.warn( 'THREE.GLTFLoader: Missing camera parameters.' );\n\t\t\treturn;\n\n\t\t}\n\n\t\tif ( cameraDef.type === 'perspective' ) {\n\n\t\t\tvar aspectRatio = params.aspectRatio || 1;\n\t\t\tvar xfov = params.yfov * aspectRatio;\n\n\t\t\tcamera = new THREE.PerspectiveCamera( THREE.Math.radToDeg( xfov ), aspectRatio, params.znear || 1, params.zfar || 2e6 );\n\n\t\t} else if ( cameraDef.type === 'orthographic' ) {\n\n\t\t\tcamera = new THREE.OrthographicCamera( params.xmag / - 2, params.xmag / 2, params.ymag / 2, params.ymag / - 2, params.znear, params.zfar );\n\n\t\t}\n\n\t\tif ( cameraDef.name !== undefined ) camera.name = cameraDef.name;\n\t\tif ( cameraDef.extras ) camera.userData = cameraDef.extras;\n\n\t\treturn Promise.resolve( camera );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#skins\n\t * @param {number} skinIndex\n\t * @return {Promise<Object>}\n\t */\n\tGLTFParser.prototype.loadSkin = function ( skinIndex ) {\n\n\t\tvar skinDef = this.json.skins[ skinIndex ];\n\n\t\tvar skinEntry = { joints: skinDef.joints };\n\n\t\tif ( skinDef.inverseBindMatrices === undefined ) {\n\n\t\t\treturn Promise.resolve( skinEntry );\n\n\t\t}\n\n\t\treturn this.getDependency( 'accessor', skinDef.inverseBindMatrices ).then( function ( accessor ) {\n\n\t\t\tskinEntry.inverseBindMatrices = accessor;\n\n\t\t\treturn skinEntry;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#animations\n\t * @param {number} animationIndex\n\t * @return {Promise<THREE.AnimationClip>}\n\t */\n\tGLTFParser.prototype.loadAnimation = function ( animationIndex ) {\n\n\t\tvar json = this.json;\n\n\t\tvar animationDef = this.json.animations[ animationIndex ];\n\n\t\treturn this.getMultiDependencies( [\n\n\t\t\t'accessor',\n\t\t\t'node'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0, il = animationDef.channels.length; i < il; i ++ ) {\n\n\t\t\t\tvar channel = animationDef.channels[ i ];\n\t\t\t\tvar sampler = animationDef.samplers[ channel.sampler ];\n\n\t\t\t\tif ( sampler ) {\n\n\t\t\t\t\tvar target = channel.target;\n\t\t\t\t\tvar name = target.node !== undefined ? target.node : target.id; // NOTE: target.id is deprecated.\n\t\t\t\t\tvar input = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.input ] : sampler.input;\n\t\t\t\t\tvar output = animationDef.parameters !== undefined ? animationDef.parameters[ sampler.output ] : sampler.output;\n\n\t\t\t\t\tvar inputAccessor = dependencies.accessors[ input ];\n\t\t\t\t\tvar outputAccessor = dependencies.accessors[ output ];\n\n\t\t\t\t\tvar node = dependencies.nodes[ name ];\n\n\t\t\t\t\tif ( node ) {\n\n\t\t\t\t\t\tnode.updateMatrix();\n\t\t\t\t\t\tnode.matrixAutoUpdate = true;\n\n\t\t\t\t\t\tvar TypedKeyframeTrack;\n\n\t\t\t\t\t\tswitch ( PATH_PROPERTIES[ target.path ] ) {\n\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.weights:\n\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.NumberKeyframeTrack;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.rotation:\n\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.QuaternionKeyframeTrack;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.position:\n\t\t\t\t\t\t\tcase PATH_PROPERTIES.scale:\n\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\tTypedKeyframeTrack = THREE.VectorKeyframeTrack;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar targetName = node.name ? node.name : node.uuid;\n\n\t\t\t\t\t\tvar interpolation = sampler.interpolation !== undefined ? INTERPOLATION[ sampler.interpolation ] : THREE.InterpolateLinear;\n\n\t\t\t\t\t\tvar targetNames = [];\n\n\t\t\t\t\t\tif ( PATH_PROPERTIES[ target.path ] === PATH_PROPERTIES.weights ) {\n\n\t\t\t\t\t\t\t// node should be THREE.Group here but\n\t\t\t\t\t\t\t// PATH_PROPERTIES.weights(morphTargetInfluences) should be\n\t\t\t\t\t\t\t// the property of a mesh object under node.\n\t\t\t\t\t\t\t// So finding targets here.\n\n\t\t\t\t\t\t\tnode.traverse( function ( object ) {\n\n\t\t\t\t\t\t\t\tif ( object.isMesh === true && object.material.morphTargets === true ) {\n\n\t\t\t\t\t\t\t\t\ttargetNames.push( object.name ? object.name : object.uuid );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ttargetNames.push( targetName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// KeyframeTrack.optimize() will modify given 'times' and 'values'\n\t\t\t\t\t\t// buffers before creating a truncated copy to keep. Because buffers may\n\t\t\t\t\t\t// be reused by other tracks, make copies here.\n\t\t\t\t\t\tfor ( var j = 0, jl = targetNames.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar track = new TypedKeyframeTrack(\n\t\t\t\t\t\t\t\ttargetNames[ j ] + '.' + PATH_PROPERTIES[ target.path ],\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( inputAccessor.array, 0 ),\n\t\t\t\t\t\t\t\tTHREE.AnimationUtils.arraySlice( outputAccessor.array, 0 ),\n\t\t\t\t\t\t\t\tinterpolation\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\t// Here is the trick to enable custom interpolation.\n\t\t\t\t\t\t\t// Overrides .createInterpolant in a factory method which creates custom interpolation.\n\t\t\t\t\t\t\tif ( sampler.interpolation === 'CUBICSPLINE' ) {\n\n\t\t\t\t\t\t\t\ttrack.createInterpolant = function InterpolantFactoryMethodGLTFCubicSpline( result ) {\n\n\t\t\t\t\t\t\t\t\t// A CUBICSPLINE keyframe in glTF has three output values for each input value,\n\t\t\t\t\t\t\t\t\t// representing inTangent, splineVertex, and outTangent. As a result, track.getValueSize()\n\t\t\t\t\t\t\t\t\t// must be divided by three to get the interpolant's sampleSize argument.\n\n\t\t\t\t\t\t\t\t\treturn new GLTFCubicSplineInterpolant( this.times, this.values, this.getValueSize() / 3, result );\n\n\t\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\t\t// Workaround, provide an alternate way to know if the interpolant type is cubis spline to track.\n\t\t\t\t\t\t\t\t// track.getInterpolation() doesn't return valid value for custom interpolant.\n\t\t\t\t\t\t\t\ttrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\ttracks.push( track );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar name = animationDef.name !== undefined ? animationDef.name : 'animation_' + animationIndex;\n\n\t\t\treturn new THREE.AnimationClip( name, undefined, tracks );\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#nodes-and-hierarchy\n\t * @param {number} nodeIndex\n\t * @return {Promise<THREE.Object3D>}\n\t */\n\tGLTFParser.prototype.loadNode = function ( nodeIndex ) {\n\n\t\tvar json = this.json;\n\t\tvar extensions = this.extensions;\n\n\t\tvar meshReferences = this.json.meshReferences;\n\t\tvar meshUses = this.json.meshUses;\n\n\t\tvar nodeDef = this.json.nodes[ nodeIndex ];\n\n\t\treturn this.getMultiDependencies( [\n\n\t\t\t'mesh',\n\t\t\t'skin',\n\t\t\t'camera'\n\n\t\t] ).then( function ( dependencies ) {\n\n\t\t\tvar node;\n\n\t\t\tif ( nodeDef.isBone === true ) {\n\n\t\t\t\tnode = new THREE.Bone();\n\n\t\t\t} else if ( nodeDef.mesh !== undefined ) {\n\n\t\t\t\tvar mesh = dependencies.meshes[ nodeDef.mesh ];\n\n\t\t\t\tnode = mesh.clone();\n\n\t\t\t\t// for Specular-Glossiness\n\t\t\t\tif ( mesh.isGroup === true ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mesh.children.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar child = mesh.children[ i ];\n\n\t\t\t\t\t\tif ( child.material && child.material.isGLTFSpecularGlossinessMaterial === true ) {\n\n\t\t\t\t\t\t\tnode.children[ i ].onBeforeRender = child.onBeforeRender;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( mesh.material && mesh.material.isGLTFSpecularGlossinessMaterial === true ) {\n\n\t\t\t\t\t\tnode.onBeforeRender = mesh.onBeforeRender;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( meshReferences[ nodeDef.mesh ] > 1 ) {\n\n\t\t\t\t\tnode.name += '_instance_' + meshUses[ nodeDef.mesh ] ++;\n\n\t\t\t\t}\n\n\t\t\t} else if ( nodeDef.camera !== undefined ) {\n\n\t\t\t\tnode = dependencies.cameras[ nodeDef.camera ];\n\n\t\t\t} else if ( nodeDef.extensions\n\t\t\t\t\t && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ]\n\t\t\t\t\t && nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light !== undefined ) {\n\n\t\t\t\tvar lights = extensions[ EXTENSIONS.KHR_LIGHTS ].lights;\n\t\t\t\tnode = lights[ nodeDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light ];\n\n\t\t\t} else {\n\n\t\t\t\tnode = new THREE.Object3D();\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.name !== undefined ) {\n\n\t\t\t\tnode.name = THREE.PropertyBinding.sanitizeNodeName( nodeDef.name );\n\n\t\t\t}\n\n\t\t\tif ( nodeDef.extras ) node.userData = nodeDef.extras;\n\n\t\t\tif ( nodeDef.matrix !== undefined ) {\n\n\t\t\t\tvar matrix = new THREE.Matrix4();\n\t\t\t\tmatrix.fromArray( nodeDef.matrix );\n\t\t\t\tnode.applyMatrix( matrix );\n\n\t\t\t} else {\n\n\t\t\t\tif ( nodeDef.translation !== undefined ) {\n\n\t\t\t\t\tnode.position.fromArray( nodeDef.translation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.rotation !== undefined ) {\n\n\t\t\t\t\tnode.quaternion.fromArray( nodeDef.rotation );\n\n\t\t\t\t}\n\n\t\t\t\tif ( nodeDef.scale !== undefined ) {\n\n\t\t\t\t\tnode.scale.fromArray( nodeDef.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn node;\n\n\t\t} );\n\n\t};\n\n\t/**\n\t * Specification: https://github.com/KhronosGroup/glTF/tree/master/specification/2.0#scenes\n\t * @param {number} sceneIndex\n\t * @return {Promise<THREE.Scene>}\n\t */\n\tGLTFParser.prototype.loadScene = function () {\n\n\t\t// scene node hierachy builder\n\n\t\tfunction buildNodeHierachy( nodeId, parentObject, json, allNodes, skins ) {\n\n\t\t\tvar node = allNodes[ nodeId ];\n\t\t\tvar nodeDef = json.nodes[ nodeId ];\n\n\t\t\t// build skeleton here as well\n\n\t\t\tif ( nodeDef.skin !== undefined ) {\n\n\t\t\t\tvar meshes = node.isGroup === true ? node.children : [ node ];\n\n\t\t\t\tfor ( var i = 0, il = meshes.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar mesh = meshes[ i ];\n\t\t\t\t\tvar skinEntry = skins[ nodeDef.skin ];\n\n\t\t\t\t\tvar bones = [];\n\t\t\t\t\tvar boneInverses = [];\n\n\t\t\t\t\tfor ( var j = 0, jl = skinEntry.joints.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar jointId = skinEntry.joints[ j ];\n\t\t\t\t\t\tvar jointNode = allNodes[ jointId ];\n\n\t\t\t\t\t\tif ( jointNode ) {\n\n\t\t\t\t\t\t\tbones.push( jointNode );\n\n\t\t\t\t\t\t\tvar mat = new THREE.Matrix4();\n\n\t\t\t\t\t\t\tif ( skinEntry.inverseBindMatrices !== undefined ) {\n\n\t\t\t\t\t\t\t\tmat.fromArray( skinEntry.inverseBindMatrices.array, j * 16 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tboneInverses.push( mat );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.GLTFLoader: Joint \"%s\" could not be found.', jointId );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmesh.bind( new THREE.Skeleton( bones, boneInverses ), mesh.matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// build node hierachy\n\n\t\t\tparentObject.add( node );\n\n\t\t\tif ( nodeDef.children ) {\n\n\t\t\t\tvar children = nodeDef.children;\n\n\t\t\t\tfor ( var i = 0, il = children.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar child = children[ i ];\n\t\t\t\t\tbuildNodeHierachy( child, node, json, allNodes, skins );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn function loadScene( sceneIndex ) {\n\n\t\t\tvar json = this.json;\n\t\t\tvar extensions = this.extensions;\n\t\t\tvar sceneDef = this.json.scenes[ sceneIndex ];\n\n\t\t\treturn this.getMultiDependencies( [\n\n\t\t\t\t'node',\n\t\t\t\t'skin'\n\n\t\t\t] ).then( function ( dependencies ) {\n\n\t\t\t\tvar scene = new THREE.Scene();\n\t\t\t\tif ( sceneDef.name !== undefined ) scene.name = sceneDef.name;\n\n\t\t\t\tif ( sceneDef.extras ) scene.userData = sceneDef.extras;\n\n\t\t\t\tvar nodeIds = sceneDef.nodes || [];\n\n\t\t\t\tfor ( var i = 0, il = nodeIds.length; i < il; i ++ ) {\n\n\t\t\t\t\tbuildNodeHierachy( nodeIds[ i ], scene, json, dependencies.nodes, dependencies.skins );\n\n\t\t\t\t}\n\n\t\t\t\t// Ambient lighting, if present, is always attached to the scene root.\n\t\t\t\tif ( sceneDef.extensions\n\t\t\t\t\t\t && sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ]\n\t\t\t\t\t\t && sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light !== undefined ) {\n\n\t\t\t\t\tvar lights = extensions[ EXTENSIONS.KHR_LIGHTS ].lights;\n\t\t\t\t\tscene.add( lights[ sceneDef.extensions[ EXTENSIONS.KHR_LIGHTS ].light ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn scene;\n\n\t\t\t} );\n\n\t\t};\n\n\t}();\n\n\treturn GLTFLoader;\n\n} )();\n"]}